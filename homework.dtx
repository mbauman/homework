% \iffalse meta-comment
%
% Copyright (C) 2011 by Matt Bauman <mbauman@gmail.com>
% -----------------------------------------------------
%
% This file may be distributed and/or modified under the conditions of
% the LaTeX Project Public License, either version 1.2 of this license
% or (at your option) any later version.  The latest version of this
% license is in:
% 
%    http://www.latex-project.org/lppl.txt
% 
% and version 1.2 or later is part of all distributions of LaTeX version
% 1999/12/01 or later.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{homework.dtx}
%</driver>
%<class|package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<class>\ProvidesClass{homework}
%<package>\ProvidesPackage{homework}
%<*class|package>
    [2011/02/12 v0.1 by Matthew J. Bauman]
%</class|package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{homework}[2011/02/12]
% Use the same conventions from the memoir class manual
\newcommand*{\Lopt}[1]{\textsf {#1}}            % typeset an option
\newcommand*{\file}[1]{\texttt {#1}}            % typeset a file
\newcommand*{\Lcount}[1]{\textsl {\small#1}}    % typeset a counter
\newcommand*{\Lenv}[1]{\texttt {#1}}            % typeset an environment
\newcommand*{\Lpack}[1]{\textsf {#1}}           % typeset a package
\newcommand*{\Lfont}[1]{\textsf {#1}}           % typeset a font
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{homework.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
% 
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v01}{2011/02/12}{Initial version}
%
% \GetFileInfo{homework.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment}
% 
%
% \title{The \Lpack{homework} class and style\thanks{This document
%   corresponds to \Lpack{homework}~\fileversion, dated \filedate.}}
% \author{Matt Bauman \\ \texttt{mbauman@gmail.com}}
%
% \maketitle
%
% \begin{abstract}
%   This package contains a both a class and a style designed to simplify
%   the authoring of schoolwork, homework and assignments. They may be used
%   independently of each other; the class provides some slight modifications
%   to the \Lpack{article} class, while the style adds commonly used 
%   packages and functionalities.
% \end{abstract}
%
% \tableofcontents
%
% \section{Introduction}
%
% Put text here.
%
% \section{The \Lpack{homework} class}
%
% The \Lpack{homework} class is provides minor enhancements and modifications
% to the \Lpack{article} base class which cannot be reliably achieved within
% the style.
% 
% \subsection{Arbitrary section numbering}
% 
% Most notably, the \Lpack{homework} class allows for the user to define
% arbitrary section numbers. As homework assignments are very closely tied to
% the \emph{number} of the problem, relying on automatic sequential numbering
% can be problematic. Additionally, problem numbers are not always sequential
% or even sensible. Thus, the \Lpack{homework} class augments the standard
% \cs{section}, \cs{subsection}, etc, syntax to optionally specify its number.
% For simplicity, I will describe everything in terms of \cs{section}, but 
% this modification applies to all sectioning commands.
% 
% The optional argument of the original syntax
% \cs{section[toc-name]\{sec-name\}} is changed to allow a prefix
% \verb+[number|toc-name]+. Recall that the \texttt{toc-name} is how the 
% section will be reported to the table of contents and headers, and that when
% omitted, it is the same as \texttt{sec-name}. This addition attempts to be
% as compatible as possible with the original syntax. If a \verb+|+ character
% appears within the optional argument, then everything before it is 
% considered the `number' and everything after is the section name for the
% table of contents. Note that a \verb+|+ character may be `hidden' by
% enclosing it within a \verb+{}+ group, in which case it is no longer
% considered the separator.
% 
% Note that `empty' parts of the optional argument are handled differently,
% depending upon which part was omitted. If the \texttt{toc-name} is omitted,
% e.g., \cs{section}\verb+[number|]{sec-name}+, then the section name is used
% as the name for the table of contents. If, however, the \texttt{number} is
% omitted and the \verb+|+ remains, e.g.,
% \cs{section}\verb+[|toc-name]{sec-name}+ then the section number is set to
% be empty.
% 
% \subsection{Class options}
%
% In addition to the standard options provided by \Lpack{article}, the 
% \Lpack{homework} class adds a \Lopt{screen}/\Lopt{print} option pair. These
% mutually exclusive options do not have very much functionality in the class
% currently. They do, however, change the default sidedness of the 
% \Lpack{article} class (\Lopt{screen} defaults to \Lopt{oneside} and 
% \Lopt{print} defaults to \Lopt{twoside}). In addition, the \Lpack{homework}
% style uses this switch to configure some options for the \Lpack{hyperref}
% package.
% 
% \StopEventually{\PrintChanges\PrintIndex}
%
% \subsection{Implementation}
%
%    \begin{macrocode}
%<*class>
%    \end{macrocode}
% \subsubsection{Setup}
% 
% Load \Lpack{fix-cm} first, as per its instructions. This fixes some bugs in
% the Computer Modern font and allows for continuous scaling.
% 
%    \begin{macrocode}
\RequirePackage{fix-cm}
%    \end{macrocode}
% 
% Similarly, the font \Lfont{rsfs} must be modified to support continuous font
% scaling. See \url{http://tex.stackexchange.com/q/10698} for details; thanks
% to user \href{http://tex.stackexchange.com/users/2674/leo-liu}{Leo Liu} for
% this solution. (This could potentially be split off into a simple 
% \Lpack{fix-rsfs} package.)
% 
%    \begin{macrocode}
\DeclareFontFamily{U}{rsfs}{\skewchar\font127 }
\DeclareFontShape{U}{rsfs}{m}{n}{ % Allow continuous sizing
   <-6> rsfs5
   <6-8> rsfs7
   <8-> rsfs10
}{}
%    \end{macrocode}
% 
% The \Lpack{etoolbox} package is required for some of the operations within
% this class file, including \cs{newtoggle}, \cs{ifcsundef} and 
% \cs{ifstrempty}.
% 
%    \begin{macrocode}
\RequirePackage{etoolbox}
%    \end{macrocode}
% 
% \subsubsection{Class option handling}
% 
%    \begin{macrocode}
\newcommand{\hw@sidedness}[1]{\def\hw@side{#1side}}
\newtoggle{hw@print}

\DeclareOption{print}{\toggletrue{hw@print}   \hw@sidedness{two}}
\DeclareOption{screen}{\togglefalse{hw@print} \hw@sidedness{one}}
\DeclareOption{oneside}{\hw@sidedness{one}}
\DeclareOption{twoside}{\hw@sidedness{two}}

\DeclareOption*{\PassOptionsToClass{\CurrentOption}{article}}

\ExecuteOptions{11pt,screen}
\ProcessOptions\relax

\LoadClass[\hw@side]{article}
%    \end{macrocode}
% 
% \subsubsection{Arbitrary section numbering}
% 
% To implement this, first, save the kernel \cs{@sect} command as \cs{@@sect}.
%    \begin{macrocode}
\let\@@sect\@sect
%    \end{macrocode}
% 
% Then, redefine \cs{@sect} to call the function that will handle the parsing
% and implementation of the new syntax. Add two \verb+|+ at the end of the
% optional argument to ensure that there will \emph{always} be at least three
% parts separated by \verb+|+.
% 
%    \begin{macrocode}
\def\@sect#1#2#3#4#5#6[#7]#8{ %
  \hw@sectsplit{#1}{{#2}{#3}{#4}{#5}{#6}}[#7||]{#8}
}
%    \end{macrocode}
% 
% The \cs{hw@sectsplit} macro is the meat of the implementation of arbitrary
% numbering. It parses the optional argument into three parts, \verb+#3+,
% \verb+#4+, and \verb+#5+.
% 
%    \begin{macrocode}
\def\hw@sectsplit#1#2[#3|#4|#5]#6{ %
%    \end{macrocode}
% 
% As the \cs{thesection} (or \cs{thesubsection}, etc, but for simplicity, I
% will describe this in terms of \cs{section}) macro is overwritten whenever a 
% custom number is used, we need to ensure that the original value is saved.
% The first time a sectioning command is called, we save this value into 
% \cs{hw@theorigsection}. Note that this has the side-effect that the user
% may not redefine \cs{thesection} in the middle of the document.
% 
%    \begin{macrocode}
  \ifcsundef{hw@theorig#1}
    {\expandafter\edef\csname hw@theorig#1\endcsname %
      {\expandafter\expandonce\csname the#1\endcsname}}
    {\relax}
%    \end{macrocode}
% 
% Now we must parse the optional argument. Argument \verb+#5+ simply absorbs
% any extra \verb+|+s. If it is empty, then that means that there were no
% \verb+|+s in the input, and only a \texttt{toc-name} was specified. In this 
% case, simply ensure that \cs{thesection} is defined as its original
% definition and call the kernel's \cs{@sect} using the defined 
% \texttt{toc-name}.
% 
%    \begin{macrocode}
  \ifstrempty{#4#5}
  {
    \expandafter\edef\csname the#1\endcsname %
      {\expandafter\noexpand\csname hw@theorig#1\endcsname}
    \@@sect{#1}#2[{#3}]{#6}
  }
%    \end{macrocode}
% 
% If, however, argument \verb+#5+ was not empty, then the user is calling the
% new custom syntax. We define the \cs{thesection} as argument \verb+#3+ and
% then call the kernel's \cs{@sect} command. If argument \verb+#4+ is empty,
% use the default \texttt{toc-name}. Otherwise, use the input provided by the
% user in argument \verb+#4+.
% 
%    \begin{macrocode}
  {
    \expandafter\edef\csname the#1\endcsname{#3}
    \ifstrempty{#4}
      {\@@sect{#1}#2[{#6}]{#6}}
      {\@@sect{#1}#2[{#4}]{#6}}
  }
}
%    \end{macrocode}
% 
% \subsubsection{Document titling}
% 
% The \Lpack{homework} class also provides a few convenience macros to 
% simplify document titling.
% 
%    \begin{macrocode}
\newcommand*{\hwClass}[1]{\def\@hwClass{#1}}
\newcommand*{\hwTitle}[1]{\def\@hwTitle{#1}}
\title{\textbf{\@hwClass:} \@hwTitle}
%    \end{macrocode}
%
%    \begin{macrocode}
%</class>
%    \end{macrocode}
% \section{The \Lpack{homework} style}
%
% Put text here.
%
%
% \StopEventually{}
%
% \subsection{Implementation}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
% Here follows the source:
%    \begin{macrocode}
\usepackage{fixltx2e}
% Use utf-8 encoding for foreign characters
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[scaled=.86]{beramono}
\usepackage{textcomp}
% Use microtype, but with half the expansion and protruding punctuation
\usepackage[stretch=10,protrusion=true]{microtype}

% Math stuffs
\usepackage{amsmath,amsthm,amssymb}
\usepackage{mathtools}
\usepackage{dsfont} % \mathds{R} for reals, etc
\usepackage{mathrsfs} % \mathscr for scripts
\usepackage{xfrac} % \sfrac{1}{2} for slanted fractions
\usepackage{empheq}
\newcommand{\sch@swap}[2]{\let\sch@tmp#1 \let#1#2 \let#2\sch@tmp}
\sch@swap{\theta}{\vartheta}
\sch@swap{\phi}{\varphi}
\sch@swap{\epsilon}{\varepsilon}

% Graphics and colors
\usepackage[svgnames]{xcolor}
\usepackage{graphicx}

% amazing unit rendering with si{\micro{}A/cm^2}, SI{3}{\meters\per\second}
\usepackage{siunitx}
\sisetup{per-mode = symbol} % use units in 'm/s' format
% And good chemical formula rendering
\usepackage[version=3]{mhchem}

% Figure handling
\usepackage{float}    % Allow "unfloating" with the H placement specifier
\usepackage{wrapfig}
% \floatstyle{boxed} 
% \restylefloat{figure}
\usepackage[small,labelfont=bf]{caption}
% \DeclareCaptionFont{singlespacing}{\setstretch{1}}
% \captionsetup{font=singlespacing}

\usepackage{placeins} % Allow \FloatBarrier

% Package for including code in the document
\usepackage{listings}
% For faster processing, load Matlab syntax for listings
\lstloadlanguages{Matlab}
\newcommand*{\matlabuserfunctions}[1]{
  \lstset{language=Matlab, morekeywords=[3]{#1}} }
\lstset{language=Matlab,
        frame=single,
        basicstyle=\footnotesize\ttfamily,
        keywordstyle=[1]\color{Blue}\bfseries,
        keywordstyle=[2]\color{Purple},
        keywordstyle=[3]\color{Blue}\underbar,
        identifierstyle=,
        commentstyle=\footnotesize\ttfamily\itshape\color{Green},
        stringstyle=\color{Purple},
        showstringspaces=false,
        tabsize=5,
        % Put standard MATLAB functions not included in the default
        % language here
        morekeywords={xlim,ylim,var,alpha,factorial,poissrnd,normpdf,normcdf},
        % Put MATLAB function parameters here
        morekeywords=[2]{on, off, interp},
        % Put user defined functions here
        % morekeywords=[3]{},
        morecomment=[l][\color{Blue}]{...},
        numbers=left,
        firstnumber=1,
        numberstyle=\footnotesize\color{Blue},
        stepnumber=5
        }
\newcommand*{\matlabscript}[2]
  {\begin{itemize}\item[]\lstinputlisting[caption={\texttt{#1.m}. #2},label={lst:#1}]{#1.m}\end{itemize}}

\usepackage[marginpar]{todo}

% \iftoggle{hw@print}
%   {\usepackage{hyperref}}
\usepackage[colorlinks,linkcolor=blue]{hyperref}
\newcommand*{\magicref}[2]{\hyperref[#2]{#1 \ref{#2}}}


\usepackage{tikz}
\usepackage{pgfplots}
\pgfplotsset{compat=1.4} 
%    \end{macrocode}
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \Finale
\endinput
